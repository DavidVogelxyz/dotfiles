#!/usr/bin/env bash

# The `command` array will contain any commands that should assume `sudo`
command=(
    "cryptsetup"
    "dmesg"
    "mount"
    "poweroff"
    "reboot"
    "shutdown"
    "su"
    "ufw"
    "umount"
    "updatedb"
)

# Aliases for all distros - should not require additional packages
alias \
    ccat="highlight --out-format=ansi" \
    chmod="chmod -v" \
    chown="chown -v" \
    cp="cp -iv" \
    diff="diff --color=auto" \
    e="$EDITOR" \
    grep="grep --color=auto" \
    history="history 1" \
    ip="ip -color=auto" \
    ka="killall" \
    mkd="mkdir" \
    mkdir="mkdir -pv" \
    mv="mv -iv" \
    rm="rm -v" \
    sdn="shutdown -h now"

# Aliases for all distros - may require additional packages
alias \
    bc="bc -ql" \
    ffmpeg="ffmpeg -hide_banner" \
    g="git" \
    lf="lfub" \
    rsync="rsync -avuP" \
    tmux="tmux -u" \
    trem="transmission-remote" \
    v="$EDITOR" \
    weath="less -S ${XDG_CACHE_HOME:-$HOME/.cache}/weatherreport" \
    xi="sudo xbps-install" \
    xq="xbps-query" \
    xr="sudo xbps-remove -R" \
    YT="youtube-viewer" \
    yt="yt-dlp --embed-metadata -i" \
    yta="yt -x -f bestaudio/best" \
    ytt="yt --skip-download --write-thumbnail" \
    ytv="yt -f \"bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best\"" \
    z="zathura"

# For systems with an `xinitrc` file
if [[ -f "$XINITRC" ]]; then
    alias startx="startx $XINITRC"
fi

# For systems with an `mbsync` file
if [[ -f "$MBSYNCRC" ]]; then
    alias mbsync="mbsync -c $MBSYNCRC"
fi

# `ls` is different on Alpine Linux
if ! [[ "$(grep "ID=.*alpine" /etc/os-release)" ]]; then
    alias ls="ls -lahN --color=auto --group-directories-first"
else
    alias ls="ls -lah --color=auto --group-directories-first"
fi

# If `bat` is `batcat`, swap `batcat` for `bat`
if [[ "$(command -v batcat)" ]]; then
    alias bat="batcat"
fi

# If neovim is installed, swap `vim` for `nvim`
if [[ "$(command -v nvim)" ]]; then
    alias \
        vim="nvim" \
        vimdiff="nvim -d"
fi

# If `virsh` is installed
if [[ "$(command -v virsh)" ]]; then
    command+=("virsh")
fi

# PACKAGE MANAGERS
if [[ "$(command -v pacman)" ]]; then
    alias \
        p="pacman" \
        update="pacman -Sy" \
        upgrade="pacman -Syu"

    command+=("pacman")
elif [[ "$(command -v nala)" ]] && [[ "$(command -v apt)" ]]; then
    alias \
        apt="nala" \
        update="nala update" \
        upgrade="nala upgrade"

    command+=("nala")
elif [[ "$(command -v apt)" ]]; then
    alias \
        update="apt update" \
        upgrade="apt upgrade"

    command+=("apt")
elif [[ "$(command -v apk)" ]]; then
    alias \
        update="apk update" \
        upgrade="apk upgrade"

    command+=("apk")
elif [[ "$(command -v dnf)" ]]; then
    alias \
        update="dnf update" \
        upgrade="dnf update"

    command+=("dnf")
elif [[ "$(command -v nixos-rebuild)" ]]; then
    command+=("nixos-rebuild")
fi

# SERVICE MANAGERS
if [[ "$(command -v sv)" ]]; then
    alias shutdown="poweroff"

    command+=("sv")
elif [[ "$(command -v systemctl)" ]]; then
    command+=("systemctl")
elif [[ "$(command -v rc-service)" ]]; then
    command+=(
        "rc-service"
        "rc-update"
        "service"
    )
fi

# Rocky Linux aliases
# Rocky 8 systems run older versions of `tmux`, so these aliases cover that
if [[ "$(grep "ID=.*rocky" /etc/os-release)" ]]; then
    alias \
        tmux-config="tmux source-file ~/.config/tmux/tmux.conf" \
        tmux-kill="tmux kill-session -t" \
        tmux-new="tmux new-session -c ~/ -ds"
fi

# If user is NOT the root user, alias all commands in the `command` array to `sudo $command`
if ! [[ "$(whoami)" == "root" ]]; then
    for c in "${command[@]}" ; do
        alias $c="sudo $c"
    done
fi

# Clean up
unset command

# Load any additional aliases
if [[ -f "${XDG_CONFIG_HOME:-$HOME/.config}/shell/aliasrc_extra" ]]; then
    source "${XDG_CONFIG_HOME:-$HOME/.config}/shell/aliasrc_extra"
fi
